{"version":3,"sources":["webpack://AbcTrace/./src/index.js"],"names":[],"mappings":";;;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":["// import abcTrace from './tool'\n\n// const canvas = document.getElementById('tool-canvas')\n\n// new abcTrace(canvas)\n\n// When true, moving the mouse draws on the canvas\nlet isDrawing = false;\nlet x = 0;\nlet y = 0;\n// let pixels =\n\nconst myPics = document.getElementById(\"tool-canvas\");\nconst context = myPics.getContext(\"2d\");\n\n// event.offsetX, event.offsetY gives the (x,y) offset from the edge of the canvas.\n\n// Add the event listeners for mousedown, mousemove, and mouseup\nmyPics.addEventListener(\"mousedown\", (e) => {\n  x = e.offsetX;\n  y = e.offsetY;\n  isDrawing = true;\n});\n\nmyPics.addEventListener(\"touchstart\", (e) => {\n  x = e.offsetX;\n  y = e.offsetY;\n  isDrawing = true;\n});\n\nmyPics.addEventListener(\"mousemove\", (e) => {\n  if (isDrawing === true) {\n    drawLine(context, x, y, e.offsetX, e.offsetY);\n    x = e.offsetX;\n    y = e.offsetY;\n  }\n});\n\nmyPics.addEventListener(\"touchmove\", (e) => {\n  if (isDrawing === true) {\n    drawLine(context, x, y, e.offsetX, e.offsetY);\n    x = e.offsetX;\n    y = e.offsetY;\n  }\n});\n\nwindow.addEventListener(\"mouseup\", (e) => {\n  if (isDrawing === true) {\n    drawLine(context, x, y, e.offsetX, e.offsetY);\n    x = 0;\n    y = 0;\n    isDrawing = false;\n  }\n});\n\nwindow.addEventListener(\"touchend\", (e) => {\n  if (isDrawing === true) {\n    drawLine(context, x, y, e.offsetX, e.offsetY);\n    x = 0;\n    y = 0;\n    isDrawing = false;\n  }\n});\n\nfunction drawLine(context, x1, y1, x2, y2) {\n  context.beginPath();\n  context.strokeStyle = \"black\";\n  context.lineWidth = 20;\n  context.lineCap = \"round\";\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.stroke();\n  context.closePath();\n}\n\nfunction drawletter(letter) {\n  const centerx = (myPics.width - context.measureText(letter).width) / 3;\n  const centery = myPics.height / 2;\n\n  context.font = \"300px Arial\";\n  context.fillStyle = \"rgb(255,255,0)\";\n  context.textBaseline = \"middle\";\n  context.fillText(letter, centerx, centery);\n}\n\ndrawletter(\"A\");\n\n// console.log(\"Webpack is working!\");\n"],"sourceRoot":""}